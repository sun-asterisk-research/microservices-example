version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    restart: unless-stopped
    command:
    - --api.dashboard=true
    - --entrypoints.http.address=:80
    - --providers.docker
    - --providers.docker.watch=true
    - --providers.docker.exposedbydefault=false
    ports:
    - ${PORT:-8000}:80
    labels:
    - traefik.enable=true
    - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN:-traefik.localhost}`)
    - traefik.http.routers.traefik.service=api@internal
    - traefik.http.middlewares.traefik-dashboard.redirectRegex.regex=/
    - traefik.http.middlewares.traefik-dashboard.redirectRegex.replacement=/dashboard/
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

  api:
    image: node:18-alpine
    restart: unless-stopped
    tty: true
    working_dir: /app
    volumes:
    - .:/app
    labels:
    - traefik.enable=true
    - traefik.http.routers.users.rule=Host(`users.localhost`)
    - traefik.http.services.users.loadbalancer.server.port=8080

  hasura:
    image: hasura/graphql-engine:v2.16.1
    restart: unless-stopped
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://hasura:secret@postgresql:5432/hasura
      PG_DATABASE_URL: postgres://hasura:secret@postgresql:5432/hasura
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: naming_convention, apollo_federation
    labels:
    - traefik.enable=true
    - traefik.http.routers.hasura.rule=Host(`${HASURA_DOMAIN}`)
    - traefik.http.services.hasura.loadbalancer.server.port=8080

  postgresql:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${HASURA_DATABASE:-hasura}
      POSTGRES_USER: ${HASURA_DB_USERNAME:-hasura}
      POSTGRES_PASSWORD: ${HASURA_DB_PASSWORD:-secret}
    volumes:
    - .docker/data/postgresql:/var/lib/postgresql/data
    - .docker/run/postgresql:/var/run/postgresql
    - .docker/db-init:/docker-entrypoint-initdb.d
