apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hasura
    hasuraService: custom
  name: hasura
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasura
  template:
    metadata:
      labels:
        app: hasura
    spec:
      containers:
      - image: hasura/graphql-engine:v2.19.0
        imagePullPolicy: IfNotPresent
        name: hasura
        envFrom:
        - configMapRef:
            name: "hasura"
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
      initContainers:
      - name: init-postgres
        image: eficode/wait-for:latest
        command: ['/app/wait-for', 'postgres:5432', '-t', '60', '-q', '--', 'echo', 'Postgres is ready']
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: hasura
data:
  HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgres://hasura:secret@postgres:5432/hasura"
  PG_DATABASE_URL: "postgres://hasura:secret@postgres:5432/hasura"
  HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
  HASURA_GRAPHQL_DEV_MODE: "true"
  HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log, websocket-log, query-log"
  HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "naming_convention, apollo_federation"
  HASURA_GRAPHQL_ADMIN_SECRET: "secret"
  HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
  HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
  HASURA_GRAPHQL_JWT_SECRET: |
    {
      "type": "RS256",
      "key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu1SU1LfVLPHCozMxH2Mo\n4lgOEePzNm0tRgeLezV6ffAt0gunVTLw7onLRnrq0/IzW7yWR7QkrmBL7jTKEn5u\n+qKhbwKfBstIs+bMY2Zkp18gnTxKLxoS2tFczGkPLPgizskuemMghRniWaoLcyeh\nkd3qqGElvW/VDL5AaWTg0nLVkjRo9z+40RQzuVaE8AkAFmxZzow3x+VJYKdjykkJ\n0iT9wCS0DRTXu269V264Vf/3jvredZiKRkgwlL9xNAwxXFg0x/XFw005UWVRIkdg\ncKWTjpBP2dPwVZ4WWC+9aGVd+Gyn1o0CLelf4rEjGoXbAAEgAqeGUxrcIlbjXfbc\nmwIDAQAB\n-----END PUBLIC KEY-----",
      "audience": "blog",
      "claims_namespace": "hasura",
      "claims_format": "json",
      "header": {
        "type": "Cookie",
        "name": "hasura_auth"
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hasura
  name: hasura
spec:
  type: ClusterIP
  selector:
    app: hasura
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hasura
spec:
  rules:
    - host: hasura.blog.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hasura
                port:
                  name: http
