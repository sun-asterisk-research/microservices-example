version: v2beta1
name: hasura

pipelines:
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"

deployments:
  configs:
    kubectl:
      manifests:
        - "../../k8s/postgres/db-config.yaml"
        - "../../k8s/postgres/db-init.yaml"
        - "../../k8s/hasura/config.yaml"
  postgres:
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: postgres:14-alpine
            envFrom:
              - configMapRef:
                  name: postgres-db-config
            volumeMounts:
              - containerPath: /docker-entrypoint-initdb.d
                volume:
                  name: postgres-db-init
                  readOnly: true
              - containerPath: /var/lib/postgresql/data
                volume:
                  name: postgres-data
        service:
          ports:
            - port: 5432
        volumes:
          - name: postgres-db-init
            configMap:
              name: postgres-db-init
          - name: postgres-data
            hostPath:
              path: /var/microservices-example/postgresql
  hasura:
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: hasura/graphql-engine:v2.33.3
            labels:
              app: hasura
            envFrom:
              - configMapRef:
                  name: hasura-config
        service:
          ports:
            - port: 8080
